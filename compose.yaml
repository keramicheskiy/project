# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  backend:
    container_name: backend
    build: ./backend
    expose: 8000
    environment:
      - SECRET_KEY = django-insecure-%4!fctsed7cv17dy#u#sn9+4rjw+$)*1#b#^i5f1u3s*6&+t6o
      - DEBUG = 0
      - ALLOWED_HOSTS = 77.239.96.124 127.0.0.1 localhost 0.0.0.0
    depends_on:
      - db

  frontend:
    container_name: frontend
    build: ./frontend
    expose: 8080
    environment:
      - SECRET_KEY = django-insecure-h5r(anz1p9b#^zr$=64!3=z5jz-645%1m19snvi43+)=k!d3#e
      - DEBUG = 0
      - ALLOWED_HOSTS = 77.239.96.124 127.0.0.1 localhost 0.0.0.0
    depends_on:
      - backend


  tg-bot:
    container_name: tg-bot
    build: ./tg-bot
    environment:
      - TOKEN = 7844200914:AAFPCl39h-hGhqfpFhShyReSjRQXEBogyes
    depends_on:
      - backend


  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/static:/app/static
    ports: 80
    depends_on:
      - frontend

  db:
    container_name: db
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - NAME = postgres
      - PASSWORD = postgres
      - HOST = db
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  db-data:



# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

